#!/usr/bin/env python
"""
Train a multistage random forest classifier with a list of samples and segmentations.

Usage:
  train_from_multiple [-m=MAXPERCLASS -n=N -r=R -s=SEGFN -t=RT1TIV] TRAIN_LIST CLASSIFIER FVECS
  train_from_multiple (-h|--help |--version)

Arguments:
  TRAIN_LIST:      A file listing directories, one per line, with both
                   feature vector and segmented .niis.
  CLASSIFIER:      The classifier parameters will be written as a modified
                   pickle to RFC_<CLASSIFIER>.pickle.
  FVECS:           Get the feature vectors from dir/<FVECS> for each dir
                   in TRAIN_LIST.

Options:
  -h --help                 Show this message and exit.
  --version                 Show the version and exit.
  -m MPC --mpc=MPC          Get up to this many samples of each class.
                            [default: 100000]
  -n N --nstages=N          The number of stages to use in the classifier
                            [default: 2] (at least 1, at most 3, 2 is best)
  -r R --smoothrad=R        A FWHM smoothing scale in mm used for propagating
                            neighborhood information.  [default: 10.0]
  -s SEGFN --seg=SEGFN      Which file in the source directories to use as the
                            ground truth.  [default: dmri_segment_edited.nii]
  -t RT1TIV --t1=RT1TIV     A T1-based TIV, already registered to diffusion
                            space.  If provided, a blurred copy of it will
                            be used as a prior.
"""
from docopt import docopt
import os
import sys

pkgdir = os.path.dirname(os.path.dirname(__file__))
if os.path.isdir(os.path.join(pkgdir, 'dmri_segmenter')):
    sys.path.insert(0, pkgdir)

from dmri_segmenter.train import train

# Please use semantic versioning (API.feature.bugfix), http://semver.org/
args = docopt(__doc__, version='1.11.0')

res, pfn, logfn = train(args['TRAIN_LIST'], args['CLASSIFIER'],
                        srclist_is_srcdirs=True, fvfn=args['FVECS'],
                        maxperclass=int(args['--mpc']), segfn=args['--seg'],
                        rT1TIVfn=args.get('--t1'),
                        smoothrad=float(args['--smoothrad']),
                        nstages=int(args.get('--nstages', 1)))
print "result:", res
print "classifier:", pfn
print "log file:", logfn


